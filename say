#!/bin/bash

# As an answer to https://old.reddit.com/r/linuxquestions/comments/952lfr/small_bash_problem_cating_text_into_a_shell_script/

# hildenae@wullie ~ $ cat foobar.txt
# Hello world.
# How are you?
# I am fine.

# hildenae@wullie ~ $ cat foobar.txt | ./say
# Reading data from pipe.
# Playing WAVE 'stdin' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono

# hildenae@wullie ~ $ ./say foobar.txt
# Reading input from foobar.txt
# Playing WAVE 'stdin' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono

# hildenae@wullie ~ $ ./say "Hello world. How are you? I am fine."
# Using argument as input
# Playing WAVE 'stdin' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono

# hildenae@wullie ~ $ ./say
# Please enter text and press enter, Ctrl+D to play, Ctrl+C to quit:
# Hello world.
# How are you?
# I am fine.
# Playing WAVE 'stdin' : Signed 16 bit Little Endian, Rate 16000 Hz, Mono

if [ -z "$1" ]; then
    # $1 is empty or unset, check STDIN
    if [ -t 0 ]; then
        # No $1, running interactively
        echo 2>&1 "Please enter text and press enter, Ctrl+D to play, Ctrl+C to quit:"
        while true; do
            read -r LINE || break
            TEXT="$TEXT $LINE"
        done
    else
        # Data piped in
        echo 2>&1 "Reading data from pipe."
        TEXT="$(cat -)"
    fi
else
  if [ -f "$1" ]; then
      echo 2>&1 "Reading input from $1"
      TEXT="$(cat $1)"
  else
      # Arg is not a file, treat as input string
      echo 2>&1 "Using argument as input"
      TEXT="$1"
  fi
fi

ln -s /dev/stdout /tmp/stdout.wav
pico2wave -w /tmp/stdout.wav "$TEXT" | aplay
rm /tmp/stdout.wav
